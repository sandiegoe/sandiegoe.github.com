<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Arexstorm个人工作站</title>
  
  
  <link href="http://sandiegoe.github.io/atom.xml" rel="self"/>
  
  <link href="http://sandiegoe.github.io/"/>
  <updated>2022-05-15T07:31:19.909Z</updated>
  <id>http://sandiegoe.github.io/</id>
  
  <author>
    <name>Arexstorm</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Redis入门</title>
    <link href="http://sandiegoe.github.io/2022/05/15/Redis%E5%85%A5%E9%97%A8/"/>
    <id>http://sandiegoe.github.io/2022/05/15/Redis%E5%85%A5%E9%97%A8/</id>
    <published>2022-05-15T06:24:35.000Z</published>
    <updated>2022-05-15T07:31:19.909Z</updated>
    
    <content type="html"><![CDATA[<h1 id="redis常识"><a class="markdownIt-Anchor" href="#redis常识"></a> Redis常识</h1><h2 id="为什么需要redis"><a class="markdownIt-Anchor" href="#为什么需要redis"></a> 为什么需要Redis？</h2><p>在软件架构里，数据通常存储在数据库里。数据库存储在磁盘文件里，会受到磁盘IO的影响，存在性能瓶颈。当访问量特别大的时候，频繁访问数据库，磁盘IO比较高，查询性能比较慢。这时候可以适当加上缓存，Redis就是个不错的选择。可以将经常查询的数据放在Redis里，借助Redis数据放在内存，提供的高效的查询能力助力业务。</p><h2 id="遇到的问题"><a class="markdownIt-Anchor" href="#遇到的问题"></a> 遇到的问题</h2><p>引入Redis之后，需要面对一个问题，如何保证数据库和缓存数据的一致性？</p><h2 id="和io相关的知识"><a class="markdownIt-Anchor" href="#和io相关的知识"></a> 和IO相关的知识</h2><h3 id="磁盘"><a class="markdownIt-Anchor" href="#磁盘"></a> 磁盘</h3><p>说的磁盘会有两个和磁盘相关的指标，一个是寻址，一个是带宽</p><ul><li>寻址：一般是在毫秒级别</li><li>带宽：单位时间内流过的数据量，一般是G或者MB</li></ul><h3 id="内存"><a class="markdownIt-Anchor" href="#内存"></a> 内存</h3><p>内存同样也会有这两个指标</p><ul><li>寻址：一般是在纳秒级别</li><li>带宽：很大</li></ul><p>在寻址方面内存会比磁盘快10W倍。</p><h3 id="io-buffer"><a class="markdownIt-Anchor" href="#io-buffer"></a> I/O buffer</h3><p>磁盘会有磁道和扇区，一个扇区512字节。如果这个容量太小，扇区数就会增加，索引就会增大，会增加管理的成本。<br />操作系统读取写入数据一般是按照4K个字节为单位来进行存取，即使只需要少量几个字节的信息，也会一次性的读取整个4K字节，提高访问速度。我们在进行磁盘格式化的时候，需要做分区对齐，一般也是4K。</p><blockquote><p>随着磁盘中文件越来越大，访问速度会变慢？这是因为此时磁盘IO成为了瓶颈。</p></blockquote><h2 id="和数据库相关的知识"><a class="markdownIt-Anchor" href="#和数据库相关的知识"></a> 和数据库相关的知识</h2><h3 id="数据存储"><a class="markdownIt-Anchor" href="#数据存储"></a> 数据存储</h3><p>当我们往数据库里放数据，首先需要为其创建一张表，定义好schema，表中包含哪些字段，类型是什么。存储的时候倾向按行来存储，将一条数据包含的所有内容，按照行的形式存到文件里。具体的存储格式和数据库存储引擎相关。</p><h3 id="数据查询"><a class="markdownIt-Anchor" href="#数据查询"></a> 数据查询</h3><p>当查询没有命中索引，会进行全表扫描，磁盘IO是比较大的。当命中索引时，可以通过索引快速查询出需要的数据，减少不必要的IO。MySQL数据库Innodb存储引擎，索引是通过B+树来实现的，每个节点可以有多个分叉，只有叶子结点存储数据，非叶子结点不存储数据，实现了用很少的层数来索引大量的数据。三层B+树，就可以来表示千万级别的数据量。</p><h3 id="表很大性能下降"><a class="markdownIt-Anchor" href="#表很大性能下降"></a> 表很大，性能下降？</h3><h4 id="增删改"><a class="markdownIt-Anchor" href="#增删改"></a> 增删改</h4><p>有索引，增删改的成本会变高，因为涉及到维护索引。</p><h4 id="查询"><a class="markdownIt-Anchor" href="#查询"></a> 查询</h4><p>单个或者少量的查询还是很快，并发大的时候会受到磁盘带宽的影响，速度会变慢（数据量大，即使通过索引命中的数据可能也比较多）。</p><h1 id="redis安装"><a class="markdownIt-Anchor" href="#redis安装"></a> Redis安装</h1><h2 id="redis官网"><a class="markdownIt-Anchor" href="#redis官网"></a> Redis官网</h2><p><a href="https://redis.io/">redis.io</a></p><h2 id="安装步骤"><a class="markdownIt-Anchor" href="#安装步骤"></a> 安装步骤</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 1.下载安装包</span> </span><br><span class="line">wget https://github.com/redis/redis/archive/7.0.0.tar.gz</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2.解压缩安装包</span> </span><br><span class="line">tar -zxvf redis-7.0.0.tar.gz</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 3.查看README.md</span></span><br><span class="line">cat README.md</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 4.编译安装</span></span><br><span class="line">yum install gcc</span><br><span class="line">make </span><br><span class="line">make install PREFIX=/opt/redis7</span><br><span class="line">make test </span><br><span class="line">make distclean</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 5.配置环境变量</span></span><br><span class="line">vi /etc/prifile</span><br><span class="line">export REDIS_HOME=/opt/redis7</span><br><span class="line">export PATH=$PATH:$REDIS_HOME/bin</span><br><span class="line">source /etc/profile</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 6.配置系统服务</span></span><br><span class="line">sh utils/install_server.sh</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 7.启动停止redis</span></span><br><span class="line">service redis_6379 start/stop/restart/status</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;redis常识&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#redis常识&quot;&gt;&lt;/a&gt; Redis常识&lt;/h1&gt;
&lt;h2 id=&quot;为什么需要redis&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#为什么需</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>动态年龄</title>
    <link href="http://sandiegoe.github.io/2022/01/28/%E5%8A%A8%E6%80%81%E5%B9%B4%E9%BE%84/"/>
    <id>http://sandiegoe.github.io/2022/01/28/%E5%8A%A8%E6%80%81%E5%B9%B4%E9%BE%84/</id>
    <published>2022-01-28T07:32:12.000Z</published>
    <updated>2022-01-28T07:32:12.067Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>标量替换</title>
    <link href="http://sandiegoe.github.io/2022/01/28/%E6%A0%87%E9%87%8F%E6%9B%BF%E6%8D%A2/"/>
    <id>http://sandiegoe.github.io/2022/01/28/%E6%A0%87%E9%87%8F%E6%9B%BF%E6%8D%A2/</id>
    <published>2022-01-28T07:31:19.000Z</published>
    <updated>2022-01-28T07:31:19.565Z</updated>
    
    
    
    
    
  </entry>
  
</feed>
