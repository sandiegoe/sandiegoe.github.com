{"meta":{"title":"Arexstorm个人工作站","subtitle":"","description":"","author":"Arexstorm","url":"http://sandiegoe.github.io","root":"/"},"pages":[],"posts":[{"title":"Redis入门","slug":"Redis入门","date":"2022-05-15T06:24:35.000Z","updated":"2022-05-15T07:31:19.909Z","comments":true,"path":"2022/05/15/Redis入门/","link":"","permalink":"http://sandiegoe.github.io/2022/05/15/Redis%E5%85%A5%E9%97%A8/","excerpt":"","text":"Redis常识 为什么需要Redis？ 在软件架构里，数据通常存储在数据库里。数据库存储在磁盘文件里，会受到磁盘IO的影响，存在性能瓶颈。当访问量特别大的时候，频繁访问数据库，磁盘IO比较高，查询性能比较慢。这时候可以适当加上缓存，Redis就是个不错的选择。可以将经常查询的数据放在Redis里，借助Redis数据放在内存，提供的高效的查询能力助力业务。 遇到的问题 引入Redis之后，需要面对一个问题，如何保证数据库和缓存数据的一致性？ 和IO相关的知识 磁盘 说的磁盘会有两个和磁盘相关的指标，一个是寻址，一个是带宽 寻址：一般是在毫秒级别 带宽：单位时间内流过的数据量，一般是G或者MB 内存 内存同样也会有这两个指标 寻址：一般是在纳秒级别 带宽：很大 在寻址方面内存会比磁盘快10W倍。 I/O buffer 磁盘会有磁道和扇区，一个扇区512字节。如果这个容量太小，扇区数就会增加，索引就会增大，会增加管理的成本。 操作系统读取写入数据一般是按照4K个字节为单位来进行存取，即使只需要少量几个字节的信息，也会一次性的读取整个4K字节，提高访问速度。我们在进行磁盘格式化的时候，需要做分区对齐，一般也是4K。 随着磁盘中文件越来越大，访问速度会变慢？这是因为此时磁盘IO成为了瓶颈。 和数据库相关的知识 数据存储 当我们往数据库里放数据，首先需要为其创建一张表，定义好schema，表中包含哪些字段，类型是什么。存储的时候倾向按行来存储，将一条数据包含的所有内容，按照行的形式存到文件里。具体的存储格式和数据库存储引擎相关。 数据查询 当查询没有命中索引，会进行全表扫描，磁盘IO是比较大的。当命中索引时，可以通过索引快速查询出需要的数据，减少不必要的IO。MySQL数据库Innodb存储引擎，索引是通过B+树来实现的，每个节点可以有多个分叉，只有叶子结点存储数据，非叶子结点不存储数据，实现了用很少的层数来索引大量的数据。三层B+树，就可以来表示千万级别的数据量。 表很大，性能下降？ 增删改 有索引，增删改的成本会变高，因为涉及到维护索引。 查询 单个或者少量的查询还是很快，并发大的时候会受到磁盘带宽的影响，速度会变慢（数据量大，即使通过索引命中的数据可能也比较多）。 Redis安装 Redis官网 redis.io 安装步骤 123456789101112131415161718192021222324252627# 1.下载安装包 wget https://github.com/redis/redis/archive/7.0.0.tar.gz# 2.解压缩安装包 tar -zxvf redis-7.0.0.tar.gz# 3.查看README.mdcat README.md# 4.编译安装yum install gccmake make install PREFIX=/opt/redis7make test make distclean# 5.配置环境变量vi /etc/prifileexport REDIS_HOME=/opt/redis7export PATH=$PATH:$REDIS_HOME/binsource /etc/profile# 6.配置系统服务sh utils/install_server.sh# 7.启动停止redisservice redis_6379 start/stop/restart/status","categories":[],"tags":[]},{"title":"动态年龄","slug":"动态年龄","date":"2022-01-28T07:32:12.000Z","updated":"2022-01-28T07:32:12.067Z","comments":true,"path":"2022/01/28/动态年龄/","link":"","permalink":"http://sandiegoe.github.io/2022/01/28/%E5%8A%A8%E6%80%81%E5%B9%B4%E9%BE%84/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"标量替换","slug":"标量替换","date":"2022-01-28T07:31:19.000Z","updated":"2022-01-28T07:31:19.565Z","comments":true,"path":"2022/01/28/标量替换/","link":"","permalink":"http://sandiegoe.github.io/2022/01/28/%E6%A0%87%E9%87%8F%E6%9B%BF%E6%8D%A2/","excerpt":"","text":"","categories":[],"tags":[]}],"categories":[],"tags":[]}